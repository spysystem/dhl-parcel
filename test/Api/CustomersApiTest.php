<?php
/**
 * CustomersApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Spy\DHLParcel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Deutsche Post International Shipping API - QA
 *
 * Welcome to the Deutsche Post International API! <br/><br/> This API provides an interface for our shipping and tracking services. It enables open integration channels for our customers and partners.
 *
 * The version of the OpenAPI document: 5.7.7
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Spy\DHLParcel\Test\Api;

use \Spy\DHLParcel\Configuration;
use \Spy\DHLParcel\ApiException;
use \Spy\DHLParcel\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CustomersApiTest Class Doc Comment
 *
 * @category Class
 * @package  Spy\DHLParcel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CustomersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createClosedBag
     *
     * Create a Closed Bag.
     *
     */
    public function testCreateClosedBag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCustomerOrder
     *
     * Create Order.
     *
     */
    public function testCreateCustomerOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createItem
     *
     * Create Single Item.
     *
     */
    public function testCreateItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createReturnItem
     *
     * Create a Return Item.
     *
     */
    public function testCreateReturnItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBagTag
     *
     * Get Label for Bag.
     *
     */
    public function testGetBagTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCustomerItemLabel
     *
     * Get Label for Item.
     *
     */
    public function testGetCustomerItemLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getItemByBarcode
     *
     * Retrieve Data for Item.
     *
     */
    public function testGetItemByBarcode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getItems
     *
     * Get Available Items.
     *
     */
    public function testGetItems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getReturnItemLabel
     *
     * Retrieve Label for Return Item.
     *
     */
    public function testGetReturnItemLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCustomerItem
     *
     * Update a single item..
     *
     */
    public function testUpdateCustomerItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
