<?php
/**
 * VASDhlRetoureTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Spy\DHLParcel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Parcel DE Shipping API (Post & Parcel Germany)
 *
 * Note: This is the specification of the DPDHL Group Parcel DE Shipping API for Post & Parcel Germany. This REST web service allows business customers to create shipping labels on demand.
 *
 * The version of the OpenAPI document: 2.1.9
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Spy\DHLParcel\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * VASDhlRetoureTest Class Doc Comment
 *
 * @category    Class
 * @description Requests return label (aka &#39;retoure&#39;) to be provided. Also requires returnAddress and return billing number. Neither weight nor dimension need to be specified for the retoure (flat rate service).
 * @package     Spy\DHLParcel
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class VASDhlRetoureTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "VASDhlRetoure"
     */
    public function testVASDhlRetoure()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_number"
     */
    public function testPropertyBillingNumber()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ref_no"
     */
    public function testPropertyRefNo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "return_address"
     */
    public function testPropertyReturnAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
