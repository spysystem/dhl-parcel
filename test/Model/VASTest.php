<?php
/**
 * VASTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Spy\DHLParcel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Parcel DE Shipping API (Post & Parcel Germany)
 *
 * Note: This is the specification of the DPDHL Group Parcel DE Shipping API for Post & Parcel Germany. This REST web service allows business customers to create shipping labels on demand.
 *
 * The version of the OpenAPI document: 2.1.9
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Spy\DHLParcel\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * VASTest Class Doc Comment
 *
 * @category    Class
 * @description Value added services. Please note that services are specific to products and geographies and/or may require individual setup and billing numbers. Please test and contact your account representative in case of questions.
 * @package     Spy\DHLParcel
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class VASTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "VAS"
     */
    public function testVAS()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preferred_neighbour"
     */
    public function testPropertyPreferredNeighbour()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preferred_location"
     */
    public function testPropertyPreferredLocation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "visual_check_of_age"
     */
    public function testPropertyVisualCheckOfAge()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "named_person_only"
     */
    public function testPropertyNamedPersonOnly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ident_check"
     */
    public function testPropertyIdentCheck()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "signed_for_by_recipient"
     */
    public function testPropertySignedForByRecipient()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "endorsement"
     */
    public function testPropertyEndorsement()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preferred_day"
     */
    public function testPropertyPreferredDay()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "no_neighbour_delivery"
     */
    public function testPropertyNoNeighbourDelivery()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_insurance"
     */
    public function testPropertyAdditionalInsurance()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bulky_goods"
     */
    public function testPropertyBulkyGoods()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cash_on_delivery"
     */
    public function testPropertyCashOnDelivery()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "individual_sender_requirement"
     */
    public function testPropertyIndividualSenderRequirement()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "premium"
     */
    public function testPropertyPremium()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "closest_drop_point"
     */
    public function testPropertyClosestDropPoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_outlet_routing"
     */
    public function testPropertyParcelOutletRouting()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dhl_retoure"
     */
    public function testPropertyDhlRetoure()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "postal_delivery_duty_paid"
     */
    public function testPropertyPostalDeliveryDutyPaid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
